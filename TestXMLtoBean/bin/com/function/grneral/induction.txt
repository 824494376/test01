本程序使用的是一种递归的手段去解析xml文件，解析的基础是sax方式，
程序的两个不同点：
	1、将所有的标签以及标签的属性抽象成为静态的常量，这样做的好处就是可以针对某一个文件进行修改标签的名称和属性而不用去排查文件中
	到底哪个地方使用到了，到底哪个地方没有使用到，这会节省开发的时间，做到整体可配置标签以及属性，一句话整个xml解析过程中的模板是动态的
	并不是固定的
	2、采用了递归，在每一个bean中存放一个list用于记录子节点的信息的，然后在解析的过程中，传入当前的实体bean，以及父节点的list<Bean>对象，以及当前对象的element元素
	这样的做法，其实在某方面来说增加了程序的复杂程度，但是从另外一个角度来说，相比直接调用一个整体函数方法anaXX(root)这样的方法要优越一些，因为anaXX这个方法其实是不可扩展的，
	无法做到动态灵活的去变动解析的内容，而改造成为在每一个实体中的bean内容里面添加一个同名称的解析方法，专门针对该bean进行解析，这样就可以实现模块化的去解析每一个标签中的内容，
	不会造成牵一发而动全身的问题，因为解析的范围只限于当前的标签element元素，不涉及到其他内容，可扩展性很高
总结：个人觉得里面提供的思路非常的好，对于在很多情况下该模板是可以进行动态扩展的解析方法，里面只是罗列了一个例子，那么如果我们更换一个其他样式的xml我们只需要修改常量文件中的标签配置，
然后在每一个实体中去修改解析方法这样就ok了，试想一下，如果一个xml很复杂，而你没有分开去解析，那么会造成一个函数内容很多，而改动起了也是非常的复杂的情况
需要导入辅助dom4j的jar包